html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  box-sizing: border-box;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

a {
  color: currentColor;
  text-decoration: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

img {
  max-width: 100%;
  display: block;
}

.intro__media__image {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.dg.ac {
  z-index: 99999 !important;
}

html {
  font-size: calc(100vw / 1920 * 10);
  scroll-behavior: smooth;
}
@media (max-width: 1023px) {
  html {
    font-size: calc(100vw / 1024 * 10);
  }
}
@media (max-width: 767px) {
  html {
    font-size: calc(100vw / 750 * 10);
  }
}

body {
  font-family: "brandon-grotesque", sans-serif;
  background-color: #fff;
}

.contact__phone, .footer__button__back-to-top, .footer__copyright, .footer__navigation__list__link {
  font-size: 2rem;
}

.contact__email, .contact__tagline, .faq__answer, .faq__question, .intro__text__wrapper p {
  font-size: 2.4rem;
  color: #262626;
  line-height: 3.6rem;
}

.home__hero__button__link {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 1.4rem;
}

.navigation__list__link, .header__logo__link {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 1.8rem;
  font-weight: 600;
}

.faq__title, .intro__title {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 4rem;
  font-weight: 600;
}

.contact__title, .intro:nth-child(6) .intro__title {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 6rem;
  font-weight: 500;
}

.home__hero__title {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 7.4rem;
  font-weight: 600;
}

.header {
  background-color: rgba(255, 255, 255, 0.5);
  backdrop-filter: blur(8px);
  position: sticky;
  width: 100%;
  top: 0;
  z-index: 1;
}

.header__wrapper {
  margin: 0 auto;
  padding: 2rem;
  max-width: 144rem;
}

.header__inner {
  display: flex;
  justify-content: space-between;
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.header__logo__link {
  color: #262626;
}

.navigation__list {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0 clamp(4rem,1rem + .47vw,1.33rem);
  margin: 0;
}

.navigation__list__link {
  color: #262626;
}

footer {
  background: #262626;
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.footer__wrapper {
  max-width: 122rem;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.footer_navigation {
  display: flex;
  gap: 3rem;
}

.footer__navigation__list__link {
  color: #939393;
  transition: 150ms ease;
}
.footer__navigation__list__link:hover {
  color: #fff;
}

.footer__copyright {
  color: #939393;
}

.footer__button__back-to-top {
  color: #939393;
}

.home__hero__wrapper {
  max-width: 122rem;
  margin: 0 auto;
}

.home__hero__title {
  margin-top: 12rem;
  max-width: 100rem;
  line-height: 7rem;
}

.home__hero__button__link {
  display: inline-block;
  border: 2px solid #262626;
  border-radius: 2px;
  text-transform: uppercase;
  background-color: #262626;
  color: #fff;
  padding: 1.2rem 2.4rem;
  cursor: pointer;
  margin-top: 4rem;
  letter-spacing: 0.1rem;
}

#about {
  scroll-margin-top: 10rem;
}

.intro__wrapper {
  display: flex;
  margin: 10rem auto 15rem;
  position: relative;
  max-width: 122rem;
}
.intro--right .intro__wrapper {
  flex-direction: row-reverse;
}
.intro:nth-child(4) .intro__wrapper {
  margin-bottom: 0;
}
.intro__text__wrapper {
  display: flex;
  flex-direction: column;
  align-self: center;
  width: 59rem;
}
.intro:nth-child(4) .intro__text__wrapper {
  align-self: flex-start;
  padding-top: 10rem;
}
.intro:nth-child(5) .intro__text__wrapper {
  width: 64.8rem;
}
.intro__text__wrapper p {
  margin-top: 2.8rem;
}

.intro:nth-child(6) .intro__title {
  position: absolute;
  top: 13rem;
}

.intro__media {
  position: relative;
}
.intro:nth-child(2) .intro__media {
  height: 65.4rem;
  width: 57.5rem;
  margin-left: 5.2rem;
}
.intro:nth-child(3) .intro__media {
  margin-right: 15rem;
  height: 50.2rem;
  width: 33.5rem;
}
.intro:nth-child(4) .intro__media {
  height: 65.4rem;
  width: 57.5rem;
  margin-left: 5.2rem;
}
.intro:nth-child(6) .intro__media {
  height: 62.2rem;
  width: 132.3rem;
  z-index: -1;
}

.intro__media__image {
  object-fit: cover;
}

.intro:nth-child(2) .gradient__square {
  height: 14.8rem;
  width: 14.6rem;
  position: absolute;
  background: linear-gradient(90deg, #C4C4C4 0%, rgba(249, 247, 255, 0) 100%);
  top: -4.5rem;
  left: 49%;
  z-index: -1;
}
.intro:nth-child(3) .gradient__square {
  height: 3.3rem;
  width: 19.7rem;
  position: absolute;
  background-color: rgba(254, 176, 98, 0.75);
  top: 47rem;
  left: 35rem;
}

.intro:nth-child(2) .gradient__ribbon {
  height: 12.7rem;
  width: 74.8rem;
  position: absolute;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, rgba(69, 64, 64, 0.65) 102.61%);
  top: 49.4rem;
  right: 20.8rem;
}
.intro:nth-child(3) .gradient__ribbon {
  height: 12.3rem;
  width: 52.8rem;
  position: absolute;
  background: linear-gradient(90deg, #C4C4C4 0%, rgba(249, 247, 255, 0) 100%);
  top: 43rem;
  left: -10rem;
}
.intro:nth-child(4) .gradient__ribbon {
  height: 12.3rem;
  width: 83.5rem;
  position: absolute;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, #B3B2B2 100%);
  top: 45rem;
  left: 20rem;
}

.faq {
  max-width: 122rem;
  margin: 0 auto;
}

.faq__wrapper {
  position: relative;
  padding-left: 20rem;
  padding-right: 20rem;
}

.faq__title {
  padding-top: 4rem;
  margin-bottom: 6rem;
}

.faq__question {
  margin-bottom: 3rem;
  padding-bottom: 2rem;
  border-bottom: solid 1px #262626;
  cursor: pointer;
}

.faq__answer {
  margin-bottom: 2rem;
  display: none;
}

.faq__gradient__ribbon {
  height: 9rem;
  width: 36rem;
  position: absolute;
  background: linear-gradient(270deg, rgba(155, 155, 155, 0.32) 0%, rgba(255, 255, 255, 0.1728) 100%);
  top: 20rem;
  right: -34.2rem;
}
.faq__gradient__ribbon:nth-of-type(2) {
  height: 12.5rem;
  width: 35rem;
  background: linear-gradient(-270deg, rgba(117, 117, 117, 0.47) 0%, rgba(255, 255, 255, 0) 84.54%);
  top: 50rem;
  left: -10rem;
  position: absolute;
}
.faq__gradient__ribbon:nth-of-type(3) {
  height: 15rem;
  width: 103rem;
  background: linear-gradient(-90deg, #C4C4C4 0%, rgba(249, 247, 255, 0) 100%);
  top: 80rem;
  position: absolute;
}

.contact {
  max-width: 122rem;
  margin: 15rem auto 15rem;
}

.contact__wrapper {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr;
}

.contact__title {
  grid-column: 1/3;
  grid-row: 1;
  padding-top: 13rem;
  margin-bottom: 5.5rem;
}
.contact__title::after {
  content: "";
  height: 0.8rem;
  width: 16rem;
  background-color: rgba(254, 176, 98, 0.75);
  display: block;
  margin-top: 1rem;
}

.contact__content {
  grid-column: 1/2;
  grid-row: 2/3;
  display: flex;
  flex-direction: column;
}

.contact__tagline {
  margin-bottom: 2rem;
}

.contact__phone {
  font-weight: 600;
}

.contact__email {
  font-weight: 600;
}

.contact__media {
  grid-column: 2/4;
  grid-row: 1/4;
  z-index: -1;
}

.contact__media__image {
  height: 53rem;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/