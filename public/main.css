html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  box-sizing: border-box;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

a {
  color: currentColor;
  text-decoration: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

img {
  max-width: 100%;
  display: block;
}

.site-wrap {
  overflow-x: hidden;
  position: relative;
}

.wrapper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  max-width: 122rem;
}
@media (max-width: 1023px) {
  .wrapper {
    flex-direction: column;
  }
}

.panel {
  margin: 6rem 0;
  padding: 6rem 0;
}

.intro__gradient__square {
  position: absolute;
  top: -4.5rem;
  left: 58rem;
  height: 14.8rem;
  width: 14.6rem;
  z-index: -1;
  background: linear-gradient(90deg, #C6C6C6 0%, rgba(255, 255, 255, 0) 100%);
}

.adoption__gradient__square {
  position: absolute;
  top: -2rem;
  left: 58rem;
  height: 14.8rem;
  width: 14.6rem;
  z-index: -1;
  background: linear-gradient(90deg, #C6C6C6 0%, rgba(255, 255, 255, 0) 100%);
}

.intro__gradient__ribbon {
  position: absolute;
  top: 49.4rem;
  right: 20.8rem;
  height: 12.7rem;
  width: 74.8rem;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, rgba(92, 92, 92, 0.65) 100%);
}

.about__gradient__ribbon {
  position: absolute;
  top: 43rem;
  left: -10rem;
  height: 12.3rem;
  width: 52.8rem;
  background: linear-gradient(90deg, #C6C6C6 0%, rgba(255, 255, 255, 0) 100%);
}

.about__orange__ribbon {
  position: absolute;
  height: 3.3rem;
  width: 19.7rem;
  top: 47rem;
  left: 33rem;
  background-color: rgba(254, 176, 98, 0.75);
}

.adoption__gradient__ribbon {
  position: absolute;
  top: 45rem;
  left: 20rem;
  height: 12.3rem;
  width: 83.5rem;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, #B3B2B2 100%);
}

.faq__gradient__ribbon {
  position: absolute;
  top: 20rem;
  right: -35rem;
  z-index: -1;
  height: 9rem;
  width: 36rem;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, #B3B2B2 100%);
}
.faq__gradient__ribbon:nth-of-type(2) {
  position: absolute;
  top: 50rem;
  left: -10rem;
  height: 12.5rem;
  width: 35rem;
  background: linear-gradient(90deg, #C6C6C6 0%, rgba(255, 255, 255, 0) 100%);
}
.faq__gradient__ribbon:nth-of-type(3) {
  position: absolute;
  top: 74rem;
  height: 15rem;
  width: 100rem;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, #B3B2B2 100%);
}

.scroll-margin {
  scroll-margin-top: 10rem;
}

.text p {
  margin-top: 2.6rem;
}

.button {
  display: flex;
  border-radius: 2px;
  text-transform: uppercase;
  background-color: #262626;
  color: #fff;
  padding: 1.2rem 2.4rem;
  cursor: pointer;
  margin-top: 4rem;
  letter-spacing: 0.1rem;
  align-items: center;
  max-width: 28rem;
}
.button:hover {
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}
.button:hover .button__icon--arrow {
  transform: translateX(0.5rem);
}
.button:active {
  background-color: #939393;
}

.button__icon--arrow {
  height: 2.8rem;
  width: 2.8rem;
  margin-left: 1rem;
  transition: transform 0.2s ease-in;
}

html {
  font-size: calc(100vw / 1920 * 10);
  scroll-behavior: smooth;
}
@media (max-width: 1023px) {
  html {
    font-size: calc(100vw / 1024 * 10);
  }
}
@media (max-width: 767px) {
  html {
    font-size: calc(100vw / 750 * 10);
  }
}

body {
  font-family: "brandon-grotesque", sans-serif;
  background-color: #fff;
}

.footer__button__back-to-top, .footer__copyright, .footer__navigation__list__link {
  font-size: 1.6rem;
}

.contact__phone {
  font-size: 2rem;
}

.contact__email, .contact__tagline, .faq__answer, .text p {
  font-size: 2.4rem;
  color: #262626;
  line-height: 3.6rem;
}

.button {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 1.4rem;
}

.header .navigation__list__link, .header__logo__link {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 1.8rem;
  font-weight: 600;
}

.faq__question {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 2.4rem;
  font-weight: 600;
}

.faq__title, .title {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 4rem;
  font-weight: 600;
}

.contact__title, .hero__title {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 6rem;
  font-weight: 600;
}

.header {
  position: sticky;
  top: 0;
  width: 100%;
  z-index: 1;
  background-color: rgba(255, 255, 255, 0.5);
  backdrop-filter: blur(8px);
}
.header__inner {
  display: flex;
  justify-content: space-between;
  padding-top: 3.6rem;
  padding-bottom: 3.6rem;
}
.header__logo__link {
  color: #262626;
}
.header .navigation__list {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0 clamp(4rem,1rem + .47vw,1.33rem);
  margin: 0;
}
.header .navigation__list__link {
  color: #262626;
}
.header .navigation__list__link:hover {
  color: #939393;
  transition: 0.1s ease;
}

.footer__wrapper {
  max-width: 122rem;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 3.6rem;
  padding-bottom: 3.6rem;
}
@media (max-width: 1023px) {
  .footer__wrapper {
    padding: 4rem;
  }
}
@media (max-width: 767px) {
  .footer__wrapper {
    flex-direction: column;
    gap: 4rem;
  }
}

.footer_navigation {
  display: flex;
  gap: 3rem;
}

.footer__navigation__list__link {
  color: #939393;
  transition: 150ms ease;
}
.footer__navigation__list__link:hover {
  color: #262626;
}

.footer__copyright {
  color: #939393;
}

.footer__button__back-to-top {
  display: flex;
  color: #939393;
  cursor: pointer;
}
.footer__button__back-to-top:hover {
  color: #262626;
}
.footer__button__back-to-top:hover svg {
  fill: #262626;
}
.footer__button__back-to-top svg {
  height: 1.4rem;
  width: 1.4rem;
  padding: 0 1rem;
}

.hero__title {
  margin-top: 12rem;
  max-width: 24ch;
  line-height: 6rem;
}
@media (max-width: 767px) {
  .hero__title {
    margin-top: 0rem;
    line-height: 1;
  }
}

.intro__inner {
  display: flex;
  align-self: center;
  position: relative;
}
@media (max-width: 767px) {
  .intro__inner {
    width: 100%;
  }
}
.intro__text-content {
  align-self: center;
  margin-right: 8rem;
  width: fit-content;
}
@media (max-width: 767px) {
  .intro__text-content {
    margin-top: 2.4rem;
  }
}
.intro__media {
  width: 100%;
}
@media (max-width: 767px) {
  .intro__media {
    margin-top: 4rem;
  }
}
.intro__media__image {
  object-fit: cover;
}

details summary {
  list-style: none;
}
details summary::-webkit-details-marker {
  display: none;
}

.faq__wrapper {
  position: relative;
  margin: -6rem auto 10rem auto;
  padding-left: 20rem;
  padding-right: 20rem;
  max-width: 122rem;
}
@media (max-width: 1023px) {
  .faq__wrapper {
    padding-left: 10rem;
    padding-right: 10rem;
    min-width: 90vw;
  }
}
@media (max-width: 767px) {
  .faq__wrapper {
    padding: 0rem;
  }
}
.faq__title {
  padding-top: 4rem;
  margin-bottom: 4rem;
}
.faq__question {
  border-top: solid 1px #262626;
  cursor: pointer;
  padding-top: 2.8rem;
  padding-bottom: 2.8rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.faq__question:hover {
  color: #939393;
  transition: 0.2s ease-in-out;
}
.faq__question__icon--down-chevron {
  height: 2.4rem;
  width: 2.4rem;
  margin-right: 3rem;
  transition: transform 0.3s ease;
  transform-origin: 65%;
}
.faq__question__icon--down-chevron.active {
  transform: rotate(180deg);
  transition: transform 0.3s ease;
  transform-origin: 65%;
}
.faq__answer__content {
  padding-bottom: 2.4rem;
  border-top: none;
}
.contact__grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr;
}
@media (max-width: 1023px) {
  .contact__grid {
    padding-left: 10rem;
    padding-right: 10rem;
  }
}
@media (max-width: 767px) {
  .contact__grid {
    padding: 0rem;
  }
}
.contact__title {
  grid-column: 1/3;
  grid-row: 1;
  padding-top: 13rem;
  margin-bottom: 5.5rem;
}
@media (max-width: 1023px) {
  .contact__title {
    grid-column: 1/4;
    padding-top: 0rem;
  }
}
.contact__title::after {
  content: "";
  height: 0.8rem;
  width: 16rem;
  background-color: rgba(254, 176, 98, 0.75);
  display: block;
  margin-top: 1rem;
}
.contact__content {
  grid-column: 1/2;
  grid-row: 2/3;
  display: flex;
  flex-direction: column;
}
@media (max-width: 1023px) {
  .contact__content {
    grid-column: 1/3;
  }
}
.contact__tagline {
  margin-bottom: 2.4rem;
}
.contact__phone {
  font-weight: 600;
}
.contact__email {
  font-weight: 600;
}
.contact__media {
  grid-column: 2/4;
  grid-row: 1/4;
  z-index: -1;
}
@media (max-width: 1023px) {
  .contact__media {
    display: none;
  }
}
.contact__media__image {
  height: 53rem;
  width: 100%;
}

.about__inner {
  display: flex;
  flex-direction: row-reverse;
}
@media (max-width: 767px) {
  .about__inner {
    width: 100%;
  }
}
.about__text-content {
  margin-top: 2.4rem;
  margin-left: 18rem;
}
@media (max-width: 767px) {
  .about__text-content {
    margin-top: 2.4rem;
  }
}
.about__media {
  width: 100%;
  margin-left: 10rem;
}
@media (max-width: 767px) {
  .about__media {
    margin-top: 4rem;
  }
}
.about__media__image {
  object-fit: cover;
}

.adoption__inner {
  display: flex;
}
@media (max-width: 767px) {
  .adoption__inner {
    width: 100%;
  }
}
.adoption__text-content {
  margin-top: 10rem;
  margin-right: 8rem;
  width: fit-content;
}
@media (max-width: 767px) {
  .adoption__text-content {
    margin-top: 2.4rem;
  }
}
.adoption__media {
  width: 100%;
}
@media (max-width: 767px) {
  .adoption__media {
    margin-top: 4rem;
  }
}
.adoption__media__image {
  object-fit: cover;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/