html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, sub, sup, tt, var,
b, u, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  vertical-align: baseline;
  box-sizing: border-box;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

a {
  color: currentColor;
  text-decoration: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

.site-wrap {
  overflow-x: hidden;
  position: relative;
}

.wrapper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  max-width: 122rem;
}
@media (max-width: 1023px) {
  .wrapper {
    max-width: 90rem;
  }
}
@media (max-width: 767px) {
  .wrapper {
    max-width: calc(100% - 10rem);
  }
}

.panel {
  margin: 5rem 0;
  padding: 5rem 0;
}
@media (max-width: 767px) {
  .panel {
    margin: 0 0 5rem 0;
    padding: 0;
  }
}

.intro__gradient__square {
  position: absolute;
  top: -4.5rem;
  left: 58rem;
  height: 14.8rem;
  width: 14.6rem;
  background: linear-gradient(90deg, #C6C6C6 0%, rgba(255, 255, 255, 0) 100%);
  z-index: 0;
}
@media (max-width: 1023px) {
  .intro__gradient__square {
    top: -2.5rem;
    left: 43rem;
    height: 8rem;
    width: 8rem;
  }
}
@media (max-width: 767px) {
  .intro__gradient__square {
    display: none;
  }
}

.intro__gradient__ribbon {
  position: absolute;
  top: 49.4rem;
  right: 20.8rem;
  height: 12.7rem;
  width: 74.8rem;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, rgba(92, 92, 92, 0.65) 100%);
  z-index: 3;
}
@media (max-width: 1023px) {
  .intro__gradient__ribbon {
    top: 38.4rem;
    right: 15.8rem;
    height: 8rem;
    width: 49.8rem;
  }
}
@media (max-width: 767px) {
  .intro__gradient__ribbon {
    display: none;
  }
}

.about__gradient__ribbon {
  position: absolute;
  top: 43rem;
  left: -10rem;
  height: 12.3rem;
  width: 52.8rem;
  background: linear-gradient(90deg, #C6C6C6 0%, rgba(255, 255, 255, 0) 100%);
}
@media (max-width: 1023px) {
  .about__gradient__ribbon {
    display: none;
  }
}

.about__orange__ribbon {
  position: absolute;
  height: 3.3rem;
  width: 19.7rem;
  top: 47rem;
  left: 33rem;
  background-color: hsla(30, 99%, 69%, 0.75);
  z-index: 2;
}
@media (max-width: 1023px) {
  .about__orange__ribbon {
    display: none;
  }
}
@media (max-width: 767px) {
  .about__orange__ribbon {
    display: initial;
    transform: rotate(-90deg);
    height: 11.6rem;
    width: 35.7rem;
    top: 148rem;
    left: 47rem;
  }
}

.montage__orange__ribbon {
  position: absolute;
  height: 2.6rem;
  width: 19.7rem;
  top: 57.5rem;
  left: 28rem;
  background-color: hsla(30, 99%, 69%, 0.75);
  opacity: 0;
}
@media (min-width: 769px) {
  .montage__orange__ribbon {
    display: none;
  }
}

.adoption__gradient__ribbon {
  position: absolute;
  top: 58rem;
  left: 30rem;
  height: 12.3rem;
  width: 83.5rem;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, #B3B2B2 100%);
  opacity: 0.5;
}
@media (max-width: 1023px) {
  .adoption__gradient__ribbon {
    display: none;
  }
}

.faq__gradient__ribbon {
  position: absolute;
  top: 20rem;
  right: -48rem;
  height: 9rem;
  width: 36rem;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, #B3B2B2 100%);
}
@media (max-width: 1023px) {
  .faq__gradient__ribbon {
    display: none;
  }
}
@media (max-width: 767px) {
  .faq__gradient__ribbon {
    display: none;
  }
}
.faq__gradient__ribbon:nth-of-type(2) {
  position: absolute;
  top: 50rem;
  left: -34rem;
  height: 12.5rem;
  width: 35rem;
  background: linear-gradient(90deg, #C6C6C6 0%, rgba(255, 255, 255, 0) 100%);
}
.faq__gradient__ribbon:nth-of-type(3) {
  position: absolute;
  top: 82rem;
  height: 15rem;
  width: 100rem;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, #B3B2B2 100%);
}

.scroll-margin {
  scroll-margin-top: 13rem;
}

.text p {
  margin-top: 2.6rem;
}

@media (max-width: 767px) {
  .underline {
    text-decoration: underline;
  }
}

.period {
  display: none;
}
@media (max-width: 767px) {
  .period {
    display: unset;
    color: hsl(30, 99%, 69%);
  }
}

.button {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 1.4rem;
  display: flex;
  border-radius: 2px;
  text-transform: uppercase;
  background-color: #262626;
  color: #fff;
  padding: 1.2rem 2.4rem;
  cursor: pointer;
  margin-top: 4rem;
  letter-spacing: 0.1rem;
  align-items: center;
  max-width: 28rem;
}
@media (max-width: 767px) {
  .button {
    background-color: transparent;
    color: #262626;
    font-size: 2.4rem;
    padding: 0;
    max-width: 100%;
    text-decoration-line: underline;
    display: none;
  }
}
.button:hover {
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}
@media (max-width: 767px) {
  .button:hover {
    box-shadow: none;
  }
}
.button:hover .button__icon--arrow {
  transform: translateX(0.5rem);
}
.button:active {
  background-color: #939393;
}
@media (max-width: 767px) {
  .button:active {
    background-color: transparent;
  }
}

.button__icon--arrow {
  height: 2.8rem;
  width: 2.8rem;
  margin-left: 1rem;
  transition: transform 0.2s ease-in;
}
@media (max-width: 767px) {
  .button__icon--arrow {
    fill: #262626;
  }
}

.splash-title {
  color: white;
  opacity: 1;
  font-size: 3.6rem;
}

.loading {
  display: grid;
  place-content: center;
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: black;
  overflow: hidden;
  z-index: 1;
}

.mask {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  opacity: 0;
  visibility: hidden;
}

html {
  font-size: 0.5208333333vw;
  scroll-behavior: smooth;
}
@media (max-width: 1023px) {
  html {
    font-size: 0.9765625vw;
  }
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

html,
body {
  font-family: "brandon-grotesque", sans-serif;
  background-color: #fff;
}

#main-content {
  display: flex;
  flex-direction: column;
}

:focus {
  outline: none;
}

:focus-visible {
  outline: 4px dashed darkorange;
  outline-offset: 0.25rem;
}

.footer__button__back-to-top, .footer__copyright, .footer__navigation__list__link {
  font-size: 1.6rem;
}

.faq__answer, .text p {
  font-size: 2.4rem;
  color: #262626;
  line-height: 3.6rem;
}
@media (max-width: 1023px) {
  .faq__answer, .text p {
    font-size: 2rem;
    line-height: 3rem;
  }
}
@media (max-width: 767px) {
  .faq__answer, .text p {
    font-size: 3rem;
    line-height: 4rem;
  }
}

.header .navigation__list__link, .header__logo__link {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 1.8rem;
  font-weight: 600;
}

.faq__question {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 2.4rem;
  font-weight: 600;
}

.faq__title, .title {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 4rem;
  font-weight: 600;
}
@media (max-width: 1023px) {
  .faq__title, .title {
    font-size: 3.6rem;
  }
}

.contact__content__title, .hero .hero__title {
  font-family: "brandon-grotesque", sans-serif;
  font-size: 6rem;
  font-weight: 600;
}

.header {
  position: sticky;
  top: 0;
  width: 100%;
  z-index: 5;
  background-color: rgba(255, 255, 255, 0.5);
  backdrop-filter: blur(8px);
}
@media (max-width: 767px) {
  .header {
    backdrop-filter: initial;
    position: unset;
  }
}
.header__wrapper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  max-width: 122rem;
}
@media (max-width: 1023px) {
  .header__wrapper {
    max-width: 90rem;
  }
}
@media (max-width: 767px) {
  .header__wrapper {
    max-width: calc(100% - 10rem);
  }
}
.header__inner {
  display: flex;
  justify-content: space-between;
  padding-top: 3.6rem;
  padding-bottom: 3.6rem;
}
.header__logo__link {
  color: #262626;
}
@media (max-width: 767px) {
  .header__logo__link {
    font-size: 3rem;
  }
}
.header .navigation__list {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  place-items: center;
  gap: 0 clamp(4rem, 1rem + 0.47vw, 1.33rem);
  margin: 0;
}
@media (max-width: 767px) {
  .header .navigation__list {
    display: none;
  }
}
.header .navigation__list__link {
  color: #262626;
}
.header .navigation__list__link:hover {
  color: #939393;
  transition: 0.1s ease;
}

.footer__wrapper {
  max-width: 122rem;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 7.6rem;
  padding-bottom: 3.6rem;
}
@media (max-width: 1023px) {
  .footer__wrapper {
    max-width: 90rem;
  }
}
@media (max-width: 767px) {
  .footer__wrapper {
    flex-direction: column;
    min-height: 24rem;
  }
}

.footer_navigation {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  place-items: center;
}

.footer__navigation__list__link {
  color: #262626;
  transition: 150ms ease;
}
@media (max-width: 767px) {
  .footer__navigation__list__link {
    font-size: 2rem;
  }
}
.footer__navigation__list__link:hover {
  color: #939393;
}

.footer__copyright {
  color: #262626;
}
@media (max-width: 767px) {
  .footer__copyright {
    font-size: 2rem;
  }
}

.footer__button__back-to-top {
  display: flex;
  color: #262626;
  cursor: pointer;
}
@media (max-width: 767px) {
  .footer__button__back-to-top {
    font-size: 2rem;
  }
}
.footer__button__back-to-top:hover {
  color: #939393;
}
.footer__button__back-to-top:hover svg {
  fill: #939393;
}
.footer__button__back-to-top svg {
  height: 1.4rem;
  width: 1.4rem;
  padding: 0 1rem;
}
@media (max-width: 767px) {
  .footer__button__back-to-top svg {
    height: 2rem;
    width: 2rem;
  }
}

.hero {
  position: relative;
}
@media (max-width: 767px) {
  .hero {
    min-height: calc(93vh - 7.2rem);
    display: grid;
    place-content: center;
  }
}
.hero .hero__title {
  margin-top: 12rem;
  max-width: 24ch;
  line-height: 6rem;
}
@media (max-width: 767px) {
  .hero .hero__title {
    margin-top: -40rem;
    line-height: 8.2rem;
    font-size: 8rem;
    font-weight: 500;
    letter-spacing: -0.08rem;
  }
}
.hero .scroll {
  display: none;
}
@media (max-width: 767px) {
  .hero .scroll {
    display: unset;
    position: absolute;
    left: 0%;
    margin-bottom: 3rem;
    font-size: 2rem;
    text-transform: uppercase;
    margin-top: 11rem;
    color: #262626;
  }
  .hero .scroll span {
    letter-spacing: 0.75rem;
  }
  .hero .scroll:after {
    position: absolute;
    content: "";
    width: 1px;
    height: 20vh;
    background: #939393;
    left: 50%;
    margin-top: 6rem;
    opacity: 0.6;
  }
}
.hero .hero__title__mobile {
  display: none;
}
@media (max-width: 767px) {
  .hero .hero__title__mobile {
    display: initial;
    font-size: 14rem;
    font-weight: 500;
    line-height: 12rem;
    display: none;
  }
}
.hero .hero__title__mobile-secondary {
  display: none;
  position: relative;
}
@media (max-width: 767px) {
  .hero .hero__title__mobile-secondary {
    display: initial;
    place-self: end;
    font-size: 7rem;
    color: #C6C6C6;
    display: none;
  }
  .hero .hero__title__mobile-secondary::before {
    content: "";
    background-color: #C6C6C6;
    position: absolute;
    width: 12rem;
    height: 2px;
    top: 4rem;
    left: -12.5rem;
  }
}

@media (max-width: 767px) {
  .intro {
    background-color: #fff;
  }
}
.intro__inner {
  display: flex;
  align-self: center;
  position: relative;
}
@media (max-width: 767px) {
  .intro__inner {
    width: 100%;
  }
}
.intro__text-content {
  align-self: center;
  margin-right: 8rem;
  width: fit-content;
}
.intro__text-content em {
  font-style: normal;
}
.intro__text-content strong {
  font-weight: 400;
}
.intro__text-content h2 {
  opacity: 1;
}
@media (max-width: 1023px) {
  .intro__text-content {
    margin-right: 3rem;
  }
}
@media (max-width: 767px) {
  .intro__text-content {
    margin: 0;
    width: initial;
    align-self: initial;
  }
  .intro__text-content em, .intro__text-content strong {
    font-weight: intial;
    font-style: italic;
  }
  .intro__text-content h2 {
    font-size: 6.4rem;
    color: #262626;
    text-align: center;
    font-weight: 600;
    margin-bottom: 5rem;
    opacity: 0;
  }
  .intro__text-content-text {
    background-color: #000;
    padding: 3rem 6rem;
    transform: translate(100px, -140px);
  }
  .intro__text-content-text p {
    margin-top: 6.6rem;
    font-size: 4.4rem;
    line-height: 6rem;
    color: #fff;
    text-align: center;
    opacity: 0;
  }
}
.intro__media {
  width: 100%;
  z-index: 2;
}
@media (max-width: 767px) {
  .intro__media {
    display: none;
  }
}
.intro__media__image {
  object-fit: cover;
}

details summary {
  list-style: none;
}
details summary::-webkit-details-marker {
  display: none;
}

@media (max-width: 767px) {
  .faq {
    order: 6;
  }
}
.faq__wrapper {
  position: relative;
  margin: -6rem auto 10rem auto;
  padding-left: 20rem;
  padding-right: 20rem;
  max-width: 122rem;
}
@media (max-width: 1023px) {
  .faq__wrapper {
    padding-left: 10rem;
    padding-right: 10rem;
    min-width: 90vw;
  }
}
@media (max-width: 767px) {
  .faq__wrapper {
    max-width: calc(100% - 6rem);
    margin: 5rem auto 10rem;
    padding: 0;
  }
}
.faq__title {
  padding-top: 4rem;
  margin-bottom: 4rem;
}
@media (max-width: 1023px) {
  .faq__title {
    font-size: 3.6rem;
  }
}
@media (max-width: 767px) {
  .faq__title {
    color: #262626;
    font-size: 5rem;
    color: #262626;
    font-weight: 600;
    margin-bottom: 5rem;
  }
}
.faq__question {
  display: flex;
  justify-content: space-between;
  border-top: solid 1px #262626;
  cursor: pointer;
  padding-top: 2.8rem;
  padding-bottom: 2.8rem;
}
.faq__question:hover {
  color: #262626;
  transition: 0.2s ease-in-out;
}
.faq__question__icon--down-chevron {
  height: 2.4rem;
  width: 2.4rem;
  margin-right: 3rem;
  transition: transform 0.3s ease;
  transform-origin: 65%;
}
@media (max-width: 767px) {
  .faq__question__icon--down-chevron {
    fill: #262626;
  }
}
.faq__question__icon--down-chevron.active {
  transform: rotate(180deg);
  transition: transform 0.3s ease;
  transform-origin: 65%;
}
@media (max-width: 767px) {
  .faq__question {
    color: #262626;
    font-size: 3rem;
    padding-top: 5rem;
    padding-bottom: 5rem;
  }
}
.faq__answer__content {
  padding-bottom: 2.4rem;
  border-top: none;
}
@media (max-width: 767px) {
  .contact {
    order: 5;
    background: #000;
    margin-top: 5rem;
  }
}
.contact__grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr;
}
@media (max-width: 1023px) {
  .contact__grid {
    padding-left: 4rem;
    padding-right: 4rem;
  }
}
@media (max-width: 767px) {
  .contact__grid {
    padding: 0rem;
    display: block;
  }
}
.contact__content {
  grid-column: 1/2;
  grid-row: 2/3;
  display: flex;
  flex-direction: column;
  z-index: 1;
}
.contact__content p:nth-child(1) {
  margin-top: 0;
}
.contact__content p:nth-child(2) {
  font-size: 2.2rem;
}
.contact__content p:nth-child(3) {
  margin-top: 0;
}
.contact__content a {
  display: block;
  font-size: 2.2rem;
  line-height: 3.6rem;
  margin-top: 1rem;
  text-decoration: underline;
}
.contact__content a:nth-of-type(2) {
  font-size: 2.4rem;
  margin-top: 0;
}
@media (max-width: 767px) {
  .contact__content {
    display: block;
    text-align: center;
    padding-top: 8rem;
    padding-bottom: 10rem;
  }
  .contact__content p:first-of-type {
    display: none;
  }
  .contact__content a {
    font-size: 3.8rem;
    line-height: 1;
    margin-top: 2rem;
    color: #fff;
    display: block;
    text-decoration: underline;
  }
  .contact__content a:first-of-type {
    font-size: 3.4rem;
  }
  .contact__content a:nth-of-type(2) {
    font-size: 3.8rem;
    margin-top: 2rem;
  }
}
.contact__content__title {
  grid-column: 1/3;
  grid-row: 1;
  padding-top: 13rem;
  margin-bottom: 5rem;
  z-index: 1;
}
@media (max-width: 1023px) {
  .contact__content__title {
    grid-column: 1/4;
  }
}
.contact__content__title::after {
  content: "";
  height: 0.8rem;
  width: 16rem;
  background-color: rgba(254, 176, 98, 0.75);
  display: block;
  margin-top: 1rem;
}
@media (max-width: 767px) {
  .contact__content__title {
    display: none;
  }
}
.contact__content__title-mobile {
  display: none;
}
@media (max-width: 767px) {
  .contact__content__title-mobile {
    display: block;
    color: #fff;
    font-size: 2.8rem;
    text-transform: uppercase;
    text-align: center;
    font-weight: 600;
    margin-bottom: 5rem;
  }
}
.contact__media {
  grid-column: 2/4;
  grid-row: 1/4;
}
@media (max-width: 767px) {
  .contact__media {
    display: none;
  }
}
.contact__media__image {
  object-fit: contain;
  height: 53rem;
  width: 100%;
}

@media (max-width: 767px) {
  .about {
    background-color: #fff;
    min-height: calc(84vh - 7.2rem);
  }
}
.about__inner {
  display: flex;
  flex-direction: row-reverse;
}
@media (max-width: 767px) {
  .about__inner {
    width: 100%;
    flex-direction: column;
  }
}
.about .mobile-image-montage {
  display: none;
}
@media (max-width: 767px) {
  .about .mobile-image-montage {
    display: initial;
    position: relative;
    min-height: 80rem;
  }
  .about .mobile-image-montage .montage-about-image {
    position: absolute;
    width: 25rem;
    top: 50rem;
    left: 15rem;
    opacity: 0;
  }
  .about .mobile-image-montage .montage-intro-image {
    object-fit: cover;
    position: absolute;
    width: 30rem;
    height: 20rem;
    top: 35rem;
    opacity: 0;
  }
  .about .mobile-image-montage .montage-adoption-image {
    object-fit: cover;
    position: absolute;
    width: 20rem;
    height: 30rem;
    top: 20rem;
    right: 0;
    opacity: 0;
  }
}
.about__text-content {
  margin-top: 1.4rem;
  margin-left: 18rem;
}
@media (max-width: 1023px) {
  .about__text-content {
    margin-left: 10rem;
  }
}
@media (max-width: 767px) {
  .about__text-content {
    display: none;
  }
}
.about__text-mobile {
  display: none;
}
@media (max-width: 767px) {
  .about__text-mobile {
    display: block;
    margin: 0 auto;
  }
  .about__text-mobile p {
    margin-top: 6.6rem;
    font-size: 4.4rem;
    line-height: 6rem;
    color: #262626;
    width: 70%;
  }
  .about__text-mobile p:nth-child(1) {
    font-size: 6.4rem;
    line-height: 7rem;
    font-weight: 600;
    width: 15ch;
    margin-top: 4rem;
  }
}
.about__media {
  margin-left: 10rem;
  z-index: 1;
}
@media (max-width: 1023px) {
  .about__media {
    margin-left: 0;
    height: 100%;
  }
}
.about__media__image {
  height: 100%;
  object-fit: contain;
  width: 168rem;
}
@media (max-width: 1023px) {
  .about__media__image {
    width: 165rem;
  }
}
@media (max-width: 767px) {
  .about__media__image {
    display: none;
  }
}

@media (max-width: 767px) {
  .adoption {
    display: none;
  }
}
.adoption__inner {
  display: flex;
}
@media (max-width: 767px) {
  .adoption__inner {
    display: block;
  }
}
.adoption__text-content {
  margin-right: 8rem;
  width: fit-content;
  width: -moz-fit-content;
}
@media (max-width: 1023px) {
  .adoption__text-content {
    margin-top: 0rem;
    margin-right: 5rem;
    align-self: center;
  }
}
@media (max-width: 767px) {
  .adoption__text-content {
    margin: 0;
  }
  .adoption__text-content h2 {
    color: #fff;
    text-align: center;
    font-size: 5rem;
    display: none;
  }
  .adoption__text-content p {
    margin-top: 4rem;
    font-size: 3.6rem;
    line-height: 6rem;
    color: #262626;
  }
}
.adoption__media {
  width: 100%;
}
@media (max-width: 767px) {
  .adoption__media {
    display: none;
  }
}
.adoption__media__image {
  object-fit: cover;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/